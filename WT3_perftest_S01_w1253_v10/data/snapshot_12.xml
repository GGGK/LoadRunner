<?xml version="1.0" encoding="utf-8"?>
<HTTPSnapshot xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xmlns:xsd="http://www.w3.org/2001/XMLSchema" id="12">
  <HTTPTask id="768" hostname="clients4.google.com" path="/chrome-variations/seed?osname=win" url="https://clients4.google.com/chrome-variations/seed?osname=win" ip="173.194.33.103" port="443" connectionId="4" origin="Primary" frame="1" startTime="1416575237" endTime="1416575284">
    <QueryString>
      <HTTPDataSet>
        <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
          <ActualData>b3NuYW1lPXdpbg==</ActualData>
        </HTTPData>
      </HTTPDataSet>
      <IsExternalData>false</IsExternalData>
    </QueryString>
    <HTTPSplittedQueryStrings>
      <HTTPHeaderEntity name="osname" index="0">
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData>d2lu</ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPHeaderEntity>
    </HTTPSplittedQueryStrings>
    <HTTPRequest method="GET">
      <HTTPHeaders>
        <HTTPHeaderEntity name="Host" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2xpZW50czQuZ29vZ2xlLmNvbQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Connection" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>a2VlcC1hbGl2ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="If-Match" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MWZkNDllNWVkZjliZDVmYzRjYzIzZDllZjVkMjY4YjY1OGEyMjc0NA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="User-Agent" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TW96aWxsYS81LjAgKFdpbmRvd3MgTlQgNi4xOyBXT1c2NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzQxLjAuMjI3Mi4xMTggU2FmYXJpLzUzNy4zNg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Accept-Encoding" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Z3ppcCwgZGVmbGF0ZQ==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0VUIC9jaHJvbWUtdmFyaWF0aW9ucy9zZWVkP29zbmFtZT13aW4gSFRUUC8xLjENCkhvc3Q6IGNsaWVudHM0Lmdvb2dsZS5jb20NCkNvbm5lY3Rpb246IGtlZXAtYWxpdmUNCklmLU1hdGNoOiAxZmQ0OWU1ZWRmOWJkNWZjNGNjMjNkOWVmNWQyNjhiNjU4YTIyNzQ0DQpVc2VyLUFnZW50OiBNb3ppbGxhLzUuMCAoV2luZG93cyBOVCA2LjE7IFdPVzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvNDEuMC4yMjcyLjExOCBTYWZhcmkvNTM3LjM2DQpBY2NlcHQtRW5jb2Rpbmc6IGd6aXAsIGRlZmxhdGUNCg0K</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
    </HTTPRequest>
    <HTTPResponse>
      <HTTPHeaders>
        <HTTPHeaderEntity name="X-Content-Type-Options" index="0">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>bm9zbmlmZg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Frame-Options" index="1">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>U0FNRU9SSUdJTg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Seed-Signature" index="2">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>TUVRQ0lBbEFDZlhFVm9sS0xEajVUUmd4YThseFc5eU9rendBd1JhR2g5M282YkpBQWlCOCtNdUFudjRPeEtDNXUxWnphNUNhUVNuRGkwbzgzZHpWUkJMWFFRRUZwdz09</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="X-Xss-Protection" index="3">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>MTsgbW9kZT1ibG9jaw==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Date" index="4">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>VGh1LCAwOSBBcHIgMjAxNSAxNzo1NToxNSBHTVQ=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Content-Type" index="5">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>YXBwbGljYXRpb24vb2N0ZXQtc3RyZWFt</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Transfer-Encoding" index="6">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>Y2h1bmtlZA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Server" index="7">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>R0ZFLzIuMA==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPHeaderEntity name="Alternate-Protocol" index="8">
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>NDQzOnF1aWMscD0wLjU=</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPHeaderEntity>
        <HTTPAllHeaders>
          <HTTPDataSet>
            <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
              <ActualData>SFRUUC8xLjEgMjAwIE9LDQpYLUNvbnRlbnQtVHlwZS1PcHRpb25zOiBub3NuaWZmDQpYLUZyYW1lLU9wdGlvbnM6IFNBTUVPUklHSU4NClgtU2VlZC1TaWduYXR1cmU6IE1FUUNJQWxBQ2ZYRVZvbEtMRGo1VFJneGE4bHhXOXlPa3p3QXdSYUdoOTNvNmJKQUFpQjgrTXVBbnY0T3hLQzV1MVp6YTVDYVFTbkRpMG84M2R6VlJCTFhRUUVGcHc9PQ0KWC1Yc3MtUHJvdGVjdGlvbjogMTsgbW9kZT1ibG9jaw0KRGF0ZTogVGh1LCAwOSBBcHIgMjAxNSAxNzo1NToxNSBHTVQNCkNvbnRlbnQtVHlwZTogYXBwbGljYXRpb24vb2N0ZXQtc3RyZWFtDQpUcmFuc2Zlci1FbmNvZGluZzogY2h1bmtlZA0KU2VydmVyOiBHRkUvMi4wDQpBbHRlcm5hdGUtUHJvdG9jb2w6IDQ0MzpxdWljLHA9MC41DQoNCg==</ActualData>
            </HTTPData>
          </HTTPDataSet>
          <IsExternalData>false</IsExternalData>
        </HTTPAllHeaders>
      </HTTPHeaders>
      <HTTPBody>
        <HTTPDataSet>
          <HTTPData dataFilePath="" dfeDataType="Raw" sectionDataType="1">
            <ActualData></ActualData>
          </HTTPData>
        </HTTPDataSet>
        <IsExternalData>false</IsExternalData>
      </HTTPBody>
      <TcpPackets>
        <PacketInfo time="1416575284" offset="0" length="1371" />
        <PacketInfo time="1416575300" offset="1371" length="1371" />
        <PacketInfo time="1416575300" offset="2742" length="1371" />
        <PacketInfo time="1416575300" offset="4113" length="36" />
        <PacketInfo time="1416575300" offset="4149" length="1371" />
        <PacketInfo time="1416575315" offset="5520" length="1371" />
        <PacketInfo time="1416575315" offset="6891" length="1371" />
        <PacketInfo time="1416575315" offset="8262" length="1371" />
        <PacketInfo time="1416575315" offset="9633" length="1371" />
        <PacketInfo time="1416575315" offset="11004" length="1371" />
        <PacketInfo time="1416575315" offset="12375" length="1371" />
        <PacketInfo time="1416575378" offset="13746" length="1371" />
        <PacketInfo time="1416575378" offset="15117" length="1371" />
        <PacketInfo time="1416575378" offset="16488" length="1371" />
        <PacketInfo time="1416575378" offset="17859" length="1371" />
        <PacketInfo time="1416575393" offset="19230" length="1303" />
        <PacketInfo time="1416575393" offset="20533" length="1371" />
        <PacketInfo time="1416575393" offset="21904" length="1371" />
        <PacketInfo time="1416575393" offset="23275" length="1371" />
        <PacketInfo time="1416575393" offset="24646" length="1371" />
        <PacketInfo time="1416575393" offset="26017" length="1371" />
        <PacketInfo time="1416575393" offset="27388" length="1371" />
        <PacketInfo time="1416575393" offset="28759" length="1371" />
        <PacketInfo time="1416575393" offset="30130" length="1371" />
        <PacketInfo time="1416575409" offset="31501" length="1371" />
        <PacketInfo time="1416575409" offset="32872" length="1371" />
        <PacketInfo time="1416575409" offset="34243" length="1371" />
        <PacketInfo time="1416575409" offset="35614" length="1303" />
        <PacketInfo time="1416575409" offset="36917" length="1371" />
        <PacketInfo time="1416575409" offset="38288" length="1371" />
        <PacketInfo time="1416575409" offset="39659" length="1371" />
        <PacketInfo time="1416575424" offset="41030" length="1371" />
        <PacketInfo time="1416575424" offset="42401" length="1371" />
        <PacketInfo time="1416575424" offset="43772" length="1371" />
        <PacketInfo time="1416575424" offset="45143" length="1371" />
        <PacketInfo time="1416575424" offset="46514" length="1371" />
        <PacketInfo time="1416575424" offset="47885" length="1371" />
        <PacketInfo time="1416575424" offset="49256" length="1371" />
        <PacketInfo time="1416575424" offset="50627" length="1371" />
        <PacketInfo time="1416575424" offset="51998" length="1303" />
        <PacketInfo time="1416575440" offset="53301" length="1371" />
        <PacketInfo time="1416575440" offset="54672" length="1371" />
        <PacketInfo time="1416575456" offset="56043" length="1371" />
        <PacketInfo time="1416575456" offset="57414" length="1371" />
        <PacketInfo time="1416575456" offset="58785" length="1371" />
        <PacketInfo time="1416575456" offset="60156" length="1224" />
      </TcpPackets>
    </HTTPResponse>
  </HTTPTask>
</HTTPSnapshot>